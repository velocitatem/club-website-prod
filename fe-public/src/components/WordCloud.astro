---
---

<pre class="center" id="word_cloud">
        <a href="/projects">
    <center>
        <div id="wordCloudWords"></div>
        <div id="wordCloudDE" class="dark:text-gray-500 text-gray-300"></div>
    </center>
        </a>
</pre>
<style>
    #wordCloudWords{
        height: 0;
        font-size: 32px;
        position: relative;
        line-height:32px;
        left:0px;
    }
    #wordCloudDE{
        font-size: 16px;
        position: relative;
        top:-48px;
        line-height: 16px;
        left: -9px;
    }
    .center {
        margin-left: auto;
        margin-right: auto;
    }
</style>


<script>
    const chars = `abcdefghijklmnopqrstuvwxzABCDEFGHIJKLMNOPQRSTUVWZ1234567890!@#$%^&*()_+-=`;

    const width = Math.floor(window.outerWidth/20);
    const height = 25;
    const words = ["AI", "ROBOTICS", "CODE", "IEU", "MACHINE-LEARNING", "ALGORITHMS", "TECH"];

    const blur = 0.15;

    let wordText = "";

    function randomChar(){
        return chars[Math.floor(Math.random() * (chars.length - 1))];
    }

    function posToStringIndex(pos, width){
        return Math.floor(pos[0] + pos[1] * (width+2));
    }

    function isSpaceFree(word, pos, boundx, buffer=0){
        if(pos[0] + buffer < 0 || pos[0] + word.toString().length + buffer > boundx) return false;

        for(let x = -buffer; x < word.toString().length + buffer; x ++)
            if (wordText[posToStringIndex([x + pos[0], pos[1]], width)] != " ")
                return false;

        return true;
    }

    //Thank you stackoverflow.com/users/4975772/joshuakcockrell
    function gaus() {
        let u = 0, v = 0;
        while(u === 0) u = Math.random(); //Converting [0,1) to (0,1)
        while(v === 0) v = Math.random();
        let num = Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );
        num = num / 10.0 + 0.5; // Translate to 0 -> 1
        if (num > 1 || num < 0) return gaus() // resample between 0 and 1
        return num
    }

    class Word{
        value;
        position;
        constructor (string, boundx, boundy){
            this.value = string;
            let attempts = 0;
            const maxAttempts = 1000;
            do {
                this.position = [Math.floor(gaus()*boundx - this.value.length/2),
                    Math.floor(gaus()*boundy)]
                attempts++;
            } while (attempts < maxAttempts && !isSpaceFree(this.value, this.position, boundx, 2));
            if(attempts >= maxAttempts) this.value = "";
        }
    }

    function generateCloudWords(elementId){
        wordText = "";
        for(let i = 0; i < height; i++) wordText += "\n".padStart(width+2, " ");

        for(let i = 0; i < words.length; i ++){
            let word = new Word(words[i], width, height);

            wordText = wordText.substring(0, posToStringIndex(word.position, width)) +
                word.value +
                wordText.substring(posToStringIndex(word.position, width) + word.value.length);
        }

        const element = document.getElementById(elementId);
        element.innerText = wordText;
    }

    function generateCloudMatrix(width, height){
        let string = "";
        for(let y = 0; y < height; y++){
            for(let x = 0; x < width; x++){
                let b = 1 - Math.sqrt(Math.pow((x-width/2)/(width/2), 2) + Math.pow((y-height/2)/(height/2), 2));
                if(b * gaus() > blur && wordText[posToStringIndex([x/2, Math.floor(y/2)], width/2)] == " ") string += randomChar();
                else string += " ";
            }
            string += "\n";
        }
        return string;
    }

    const generateCloudAndUpdateElement = (elementId, delay) => {
        const element = document.getElementById(elementId);

        const update = () => {
            const cloud = generateCloudMatrix(width*2, height*2);
            element.innerText = cloud.toString();
            setTimeout(update, delay);
        };

        setTimeout(update, delay);
    };

    generateCloudWords("wordCloudWords");
    generateCloudAndUpdateElement("wordCloudDE", 50);

</script>